<30. 1장 | 벨로퍼트와 함께 하는 모던 리액트 : 리액트 입문 - 김민준 강사>
00. 강의 소개
- 클래스형 컴포넌트에서 hooks + 함수형 컴포넌트로 진화함
- react를 사용하려면 javascript의 기초를 잘 알아야함
- 리엑트 참고 자료 주소 : https://react.vlpt.us/
--------------------------------------------------------------------------------------------
01. 리액트는 어쩌다가 만들어졌을까
- 자바스크립트를 사용하면 dom을 활용한 변형을 할 때 웹어플리케이션 코드가 길이가 길어지면 복잡하고 처리하기 힘들어짐
- 리액트는 다른 js의 프레임워크들과는 다르게 dom의 상태값이 변하면 아예 처음부터 만들어서 보여주면 어떨까라는 생각으로 부터 만들어짐
- 업데이트를 어떻게 해야할까라는 문제가 사라짐
- 모든걸 다 날리고 새로 만든다면 속도가 매우 느려질텐데 virtual dom을 이용하여 그 문제점을 해결함(메모리에 가상으로 존재하는 dom)
- react에서는 업데이트가 필요한 dom을 virtual dom에 저장하고 브라우저에서 보여주고 있는 돔과 virtual 돔의 차이점을 비교하고 patch해서 반영시켜줌
- 필요한 변화만 발생시켜서 바꿔주므로써 빠른 속도를 보장
- UI를 어떻게 업데이트할지보다 UI를 어떻게 보여줄지에 집중해서 코딩하면 됨
- 리액트에서는 UI를 컴포넌트 형태로 사용, 컴포넌트는 다양한 기능을 제공
--------------------------------------------------------------------------------------------
02. 작업환경 준비
- nodejs(웹이 아닌 곳에서 자바스크립트를 실행할 수 있게 해주는 자바스크립트 런타임)
- yarn(자바스크립트 페키지를 다운로드 할 때 사용)
- VS Code (에디터)
- git for windows (git의 윈도우 버전) - 맥으로 할때는 필요없음
- 리액트의 새로운 프로젝트를 만들때에는 원하는 경로에 가서 npx create-react-app 원하는디렉토리명 명령어를 치면됨
- 만들어진 디렉토리로 이동하여 yarn start 명령어 실행 그러면 react 웹화면이 만들어진것인데 이러면 개발 환경이 완성된 것
- 처음 보여주는 화면은 해당 디렉토리 - src - App.js를 수정하면 바꿀 수 있음
- 개발 서버를 끄고싶을 때에는 ctrl+c를 누르면 됨
- 이러한 환경을 구성하기 힘들때에는 code sandbox를 이용하여 개발하면 된다
--------------------------------------------------------------------------------------------
03. 나의 첫번째 리액트 컴퓨넌트
- 리액트를 사용할때에는 항상 첫줄에 import React from 'react';를 적어줘야함
- 컴포넌트 이름은 대문자로 시작하여 카멜표기법 사용
- 함수형태로 만들어서 return 문에 html 형식의 데이터 전송
- 마지막에 export default 함수명을 통해서 적재해줌
- js 파일에서 원하는 리액트 파일을 import 해서 사용
- App.js 에서 파일을 적재한 후에 사용해주면 됨
- index.js 에서 파일 아이디가 root인 것에 넣어서 실행하겠다는 것을 나타내줌
- public/index.html에 삽입되어 나타내어지는 것이라고 보면 됨
- 30강\begin-react에 src에 hello.js 가 동작할 react 파일, App.js가 react 파일을 받아와서 어떻게 출력해줄 것인가를 나타내주는 파일, public의 index.html이 기본 html 경로