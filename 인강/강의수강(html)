<01. HTML & CSS 첫걸음 / 개요>
1강 - 개요
- html 은 뼈대를 만들고
- css 가 모양을 만들어줌(예쁘게 만들어주는 것)
- js 는 콘텐츠를 바꾸고 움직이는 등 페이지를 동적으로 꾸며주는 역할
- 웹 페이지 만들 때, 각 언어가 가지고 있는 특징을 명확하게 사용해서 만들어야함(생산성을 위해서 복잡한 구조)
-------------------------------
3강 - 웹표준과 웹 접근성
- 웹 표준은 w3c에서 규정한 표준 기술이나 규칙 - 이 표준을 기준으로 웹 브라우저를 만드는데 이 표준을 브라우저만드는 업체마다 해석하는 차이, 새로운 기술의 삽입 등으로 조금 씩 다르게 보일 수 있음
- 웹 표준은 w3c의 권고안이라고 보면 됨
- 크로스 브라우징은 조금씩 다르게 구동되는 브라우저들에서 동일한 사용자 경험을 줄 수 있도록 구연하는 기술, 방법(인터넷 익스플로러는 약간 달라서 표준화하기 쉽지 않음)
- 웹 접근성은 정상적인 웹 콘텐츠 사용이 가능한 사용자부터 고령자, 장애인 같은 제한이 있는 사용자들도 동등하게 접근할 수 있는 콘텐츠를 제작하는 방법을 말함 (청각장애인을 위한 자막, 마우스 사용불가인 사람을 키보드로만 이용 가능) -> 웹 접근성을 준수하는 개발 필요
-------------------------------
4강 - 에디터 소개
- 웹 개발은 툴에 대한 종속성이 거의 없음(메모장만 사용해서도 개발 가능하나 비효율적)
- 툴 장단점
- Sublime text 리소스가 상대적으로 가벼운 프로그램
- Atom 맥에는 최적화가 잘 되어있으나 윈도우는 추천 x
- Brackets는 어도비에서 만들었고 오픈소스, 시각적인 결과물을 확인하는데는 특화되어있으나 성능 최적화가 잘 안되어있음
- vscode 가볍고 확장기능 다수 보유, 무료
- Web storm 은 통합 개발 환경 프로그램임, 확장기능 필요없음 굉장히 편하지만 별도의 비용 지불 필요
-------------------------------
6,7강 - vs code 한글 패치, beautify & live server
확장 프로그램들
-Html 파일에서 !치고 tab치면 자동으로 html 기본 서식이 작성된다
-Vscode 한글팩 : Korean language pack 깔고 vscode를 재부팅하면됨
-Beautify : 자동으로 깔끔하게 정렬(단, 설치하고 단축키를 설정해줘야함) - cmd + alt + l
-live server : html 소스를 웹창으로 자동으로 볼 수 있도록 해주는 것(오른쪽 아래 go live를 클릭하면 됨 또는 우클릭 후 open with live server 클릭
-------------------------------
8강 - 그 외 확장 프로그램과 알아두면 좋은 단축키
- 탭에서 우클릭으로 화면 분할해서 쓸 수 있음
- 탭 종료는 cmd + w
- 태그로 한번에 묶고싶으면 묶고싶은 부분 드래그 -> cmd + shift + p -> wrap -> 묶을 태그 입력 후 엔터
-------------------------------
9강 - 이미지에 대한 이해
- 웹에서 사용하는 이미지는 방식이 비트맵과 벡터로 나뉨
- 비트맵은 픽셀이 모여 만들어진 정보의 집합, 레스터 이미지라고도 함, 픽셀 단위로 렌더링함, 대부분의 이미지가 비트맵형식
- 벡터는 수학적 정보의 형태들이 만든 결과물, 이미지가 가지고 있는 점,선,면의 위치, 색상 등의 정보를 온전히 가지고 있어서 그를 화면에 렌더링, 해상도가 자유로움, 수학적 정보를 가지고 있기때문에 이미지 확대 축소로 용량이 변하진 않음
-------------------------------
10강 - jpg, png, gif, webp, svg
- jpg는 압축률이 훌륭해서 사진이나 예술 분야에서 많이 사용, 손실압축, 표현색상도가 뛰어나 고해상도 표시장치에 적합, 24비트 컬러, 이미지의 품질과 용량 조절 용이, 가장 널리쓰임(높은 압축률, 적은용량)
- png는 비손실 압축, gif의 대체포맷으로 개발, 비손실 압축이라 용량을 효과적으로 줄이진 못함, 8비트 24비트 컬러 이미지 처리, alpha channel 지원(투명도), w3c의 권장 포맷임(투명도 지원)
- gif는 이미지 파일 내에 이미지 및 문자열 정보 저장 가능, 비손실 압축, 여러장의 이미지를 한 개 파일로 담을 수 있어서 움짤을 만들 수 있음, 8비트 컬러만 지원(동영상 같은 이미지)
- 언제 이 포맷을 사용할 지 잘 정해서 써야함
- webp는 구글에서 만든 이미지 포맷, 완벽한 손실/비손실 압축 지원, gif같은 애니메이션 지원, aplpha channel도 지원(완벽한 포맷이지만 지원 브라우저가 적다)
- svg는 마크업 언어 기반의 벡터 그래픽을 표현하는 포맷, 해상도의 영향에서 자유로움, css로 스타일링 가능, javascript로 event handling 가능, 코드 혹은 파일로 사용 가능(다루기 까다로움)
-------------------------------
11강 - 특수 기호
- 특수문자 모르는 명칭들
- ` : 그레이브(grave) //이 표시는 한글상태에서는 option+₩해야 입력됨
- ~ : 틸드(tilde)
- ^ : 캐럿(catet)
- * : 에스터리스크(asterisk)
- () : 퍼렌서시스(parenthesis) - 소괄호
- {} : 브레이스(brace) - 중괄호
- [] : 브래킷(bracket) - 대괄호
- <> : 앵글 브래킷(angle bracket) - 꺽쇠괄호
- 특수문자 참고용 : https://www.freeformatter.com/html-entities.html
-------------------------------
12강 - 오픈소스와 라이선스
- 오픈소스는 어떤 제품을 개발하는 과정에서 필요한 소스코드나 설계도를 누구나 열람하고 접근할 수 있도록 공개하는 것
- 오픈소스는 보통 무료 저작권이고 공짜이지만 상업이용으로는 제한이 있거나 비용을 지불해야할 수 있음
- 괜찮은 오픈소스를 찾았다면 라이선스를 찾아보는게 중요함 free라고 되어있는 무료를 찾는게 중요
- 자주 보는 오픈소스 라이센스
- apache licence : 아파치에서 만든 라이선스, 개인적/상업적 이용, 배포, 수정, 특허신청 가능
- mit licence : mit에서 만든 라이선스로 개인 소스에 이 라이선스를 사용하고 있다는 표시만 해주면 제약 없음
- bsd licence : 버클리 캘리포니아대학에서 개발, 라이선스 표시만 지켜주면 됨
- beerware : 개발자들이 오픈소스 사용하면 오픈소스 개발자를 만나게 되면 맥주를 사줘야 하는 라이센스
- OpenSource.org 사이트에서 라이센스 정보 확인 가능
--------------------------------------------------------------------------------------------------------------------------------

<02.html & css 첫걸음 / html>
1강 - 기본 문법
- html 태그는 < > 사이에 각자의 의미를 가지고 있는 것으로 <tag> </tag>를 요소라고 부름
- 사실상 tag와 요소는 같은것이라고 보면 된다.
- <tag> 와 </tag> 사이에 컨텐츠를 입력
- html의 주석은 <!-- -->
- <h1></h1>은 제목, <p></p>는 문단
- 열리고 닫히는 태그가 하나의 묶음임
---------------------------------
2강 - 속성과 값
- 태그의 기능을 확장하기 위해 속성을 사용 <tag 속성="값"></tag>
- 예시 : <img src="./image.jpg" alt="대체텍스트"/> //src 는 소스 alt는 대체 텍스트
-     : <div class="my_div">김용수</div> //div 는 의미가 없는 분할임, class는 태그의 별명이라고 보면 됨
---------------------------------
3강 - 부모요소, 자식요소
- 태그A가 태그B의 콘텐츠로 사용하면 태그B는 태그A의 부모요소, 태그B는 자식 요소
- <parent>
    <child></child>
  </parent>
---------------------------------
4강 - 빈 태그
- 빈 태그는 비어있는 태그라는 뜻으로 닫히는 개념이 없는 태그들이라고 보면 됨
- ex <img ~~~~~~ />
- html5버전에서는 뒤에 /써도되고 안써도됨
- 단 xhtml환경에서 개발하는 경우에는 빈태그에 /를 꼭 붙여야함
- 앵간하면 /를 쓰던지 안쓰던지 통일성 있게 하는 것이 좋음
- 빈태그들은 대부분 속성="값"이 붙는다
---------------------------------
5강 - doctype
- <html>
    <head>
      <meta charset = "utf-8">
      <title>제목</title>
      <link rel="stylesheet" href="./css/main.css">
      <script src="./js/main.js"></script>
    </head> //html의 정보
    <body> 
      <div>
        ......
      </div>
    </body> //html의 구조
  </html> //html 파일의 범위
- DOCTYPE는 DTD(Document Type Definition)이라하며 마크업 언어에서 문서 형식을 정의
- 웹 브라우저의 버전을 알려줌 (html 1,2,3,4,5, xhtml이 있으며 html5가 가장 최신버전
- <!DOCTYPE html> 이라고 쓰면 html5로 돌아감
---------------------------------- 
6강 - head 태그
- head 태그 내에 들어가는 태그들
- title태그 : <title></title> 웹 브라우저의 탭에 나타낼 이름을 지정
- meta태그 : <meta> html문서의 기타 모든 정보를 나타냄, 빈태그임
  - <meta charset = "utf-8"> : 텍스트 인코딩 방식을 지정, 무조건 넣어줘야한다.
  - <meta name="author" content="김용수"> : 나타내고 싶은 정보를 name 내용물을 content에 넣음
  - charset : 문자인코딩 방식, name : 제공하기 위한 정보의 종류, content : name이나 http-equi속성의 값을 제공
- link태그 : <link> 외부 문서를 연결할 때 사용, css나 html, icon 문서들을 가지고올 때 사용, 빈태그
  - <link rel="stylesheet" href = "./css/main.css"> : 스타일시트 속성의 main.css를 가져옴
  - <link rel="icon" href="./a.png"> : 아이콘 a.png를 가져옴
  - rel : (필수)현재 문서와 외부문서의 관계, href : 외부문서의 위치
- style태그 : <style></style> css를 외부문서가 아닌 html문서에 직접 작성할 때 사용
  - <style>
  -  img{
  -   width: 100px;
  -   height:200px;
  -  }
  - </style>
- script태그 : <script></script>js를 불러오거나 작성하는 태그
  - <script src="./a.js"></srcript> : js를 외부에서 가져옴
  - <script> function ......... </script> : js를 내부에서 작성
---------------------------------
7강 - body 태그, 웹 표준 검사
- body 태그 내에 들어가는 태그들
- div 태그 : <div></div> 문서의 분할을 할 때 사용하는 것으로 의미는 없음, 특정 부분씩 묶을 때 사용한다고 보면 됨
  - <div>
      <p></p>
    </div>
    <div>
      <div>
        <h1></h1>
      </div>
    </div>
- img 태그 : <img> html에 이미지를 삽입할 때 사용하는 태그로 빈태그임
  - <img src="./a.png" alt="a"> : 이미지 a.png를 삽입하겠다, 대체 텍스트는 a
  - src : (필수) 이미지의 경로, alt : (필수) 이미지의 대체 텍스트
- 웹표준 검사하기 : w3c validator에 접속하여 html 문서를 업로드하면 웹표준에 맞는지 기본적인 검사를 해줌(https://validator.w3.org/)
---------------------------------
8강 - 예제
- 예제 만드는  index_2_8.html 
---------------------------------

<03. html & css 첫걸음 / css>
1강 - 기본 문법과 선택자의 역할
- css 기본 형태
  - 선택자 {
        속성: 값;
        속성: 값;
   }
- 선택자 내의 속성들을 값으로 지정해준다
  - div{
        font-size:20px;
        color: red;
    }
    이면 div 태그 내의 내용들의 폰트 크기는 20px, 색은 빨간색
---------------------------------
2강 - 속성과 값
- 속성과 값은 글자색, 너비, 높이, 여백 등 스타일을 지정할 때 사용
  - div{
      color: red; /* 글자색 */
      font-size:20px; /* 글자크기 */
      width:300px; /* 가로 너비 */
      margin:20px; /* 바깥 여백 */
      padding:10px 20px; /*안쪽여백 위아래, 좌우 */
      position: absolute; /* 위치 */
   }
---------------------------------
3강 - 선언 방식
- 태그에 직접 선언하는 인라인 방식, 직접 태그를 찾아서 직접 넣어줘야하기 때문에 동일한 동작을 여러번 해야할 수 있어서 안좋다
  - <div style="color: red;"> 태그에 직접 작성하기 </div>
- html 내장 방식, html style 태그 안에 포함, 해당 파일 내에서만 사용 가능
  - <head>
      <style>
        div {
          color: red;
          font-size: 20px;
        }
      </style>
    </head>
    <body>
      <div> 여기에 css 적용 </div>
    </body>
- 외부에서 가져오기, 여러개의 html 파일에서 계속해서 재활용 가능
  - <head> <!-- html -->
      <link rel="stylesheet" src="./css/main.css">
    </head>
    <body>
      <div> 외부에서 가져와서 여기에 적용 </div>
    </body>
  - div{ /* main.css */
      color: red;
    }
---------------------------------
4강 - 선언 방식 예제
- 3강에 대한 예시(./3강)
---------------------------------
5강 - 선택자
- 선택자를 입력하는 부분에 css를 적용하려는 태그의 이름을 입력
  - h1{
        원하는 css
    }
- 태그의 이름만으로는 정확한 위치를 지정할 순 없음
- 태그에다가 클래스라는 별칭을 지정하여 클래스 선택자를 사용하여 css를 적용 가능
  - .title {
        원하는 스타일
    }
- 클래스는 태그 내에 class="class명"으로 지정해주며 css에서 사용할 때에는 앞에 class를 나타내는 .을 입력해줘야함
  - <p class="title">제목</p> 이런식으로 클래스 지정
---------------------------------
6강 - 속성 1  크기
- 선택자{
    속성 : 값;
  }
- 속성은 크기, 여백, 색상 같은 눈에 보이는 스타일을 지정할 수 있음
- 크기를 지정해주는 태그들
- width는 가로 너비를 지정
  - ex)div{
        width: 300px;
       }
- height는 요소의 세로 너비를 지정
  - div{
        height: 150px;
    }
- 맥 개발자 도구는 cmd + alt + i누르면 나옴
- 글씨 크기는 font-size 태그
- 대부분의 브라우저에서는 글자크기 font-size는 16px가 기본이라고 보면 됨
- ./3강/main_c_6.css 에 예시
---------------------------------
7강 - 속성 2  여백
- 여백은 margin 과 padding 이 있음
- margin은 요소의 바깥에 존재하는 여백
 - div {
     margin: 20px;
   }
- 위의 margin은 위 아래 왼쪽 오른쪽 전부 20px이라고 보면 된다
- 위 아래 좌 우를 따로 속성을 지정하고 싶다면 margin-top, margin-right, margin-left, margin-bottom으로 따로따로 지정할 수 있음.
- margin을 단축 속성, margin-top, margin-right, margin-left, margin-bottom을 개별 속성이라고 부름
- 단축속성이라고 불리는 애들은 무조건 개별 속성이 있음
- padding은 요소의 내부에 존재하는 여백을 의미함
  - div {
      padding: 20px;
    }
- margin과 마찬가지로 padding 도 상하좌우를 여백을 따로 지정할 수 있음.
- padding 을 사용 시에는 영역의 너비가 늘어난다.
- ./3강/index_3_7.html ./3강/main_3_7.css참고
---------------------------------
8강 - 속성 3  색상
- color는 font-color, text-color 라는 속성 없이 그냥 color 를 사용함
  - div {
      color: red;
    }
- background는 요소의 배경 속성을 지정하는 것, 따라서 background-color를 사용하여 지정
  - div { 
      background-color: red;
    }
- background는 단축 속성이라 색상 여백 등 다양한 것을 지정할 수 있음
- ./3강/index_3_8.html ./3강/main_3_8.css를 참조
---------------------------------
9,10,11강 예제
- width 와 height 는 기본값으로 auto로 지정되어있음
- div 태그는 보통 width 는 100% height는 자동으로 안의 항목들의 항목들의 높이의 최대값으로 지정
- margin:auto 쓰면 가운데로 간다라고 보면 됨(좌우 여백을 같게 지정)
- float 속성을 사용하여 수직으로 되어있는 부분을 수평으로 만들 수 있음(float: left;)
- float 는 요소가 뜨는 상태로 만들어주는거라 배경색이 안나올 수 있는데 clearfix를 사용하면 배경에서 제외되지 않게 할 수 있음(나중에 배움) - 부모에 clearfix를 클래스에 넣어줘야함
- css도 html이랑 구조가 유사하게 작성하는 습관을 들어야 유지보수가 쉬움
- 수직 가운데 정렬은 위아래에 padding을 넣어서 가운데 정렬을 함
- 개발자 도구에서 속성을 복사해 갈 수 있음
- 보통 효과를 보는 곳에 속성을 넣음
---------------------------------

<04. html/개요, 요소 - 주요범위 & 메타데이터>

1강,2강,3강 블록, 인라인
- html 블록 레벨 요소와 인라인 요소를 모르면 css 사용하는데 문제가 생길 수 있음
  - 블록요소 : div, h1, p
  - 인라인 요소 : span, img
- 블록 요소
  - 사용 가능한 최대 가로 너비를 사용
  - 크기를 지정할 수 있다.
  - (width: 100%; height:0;로 시작) -> 가로 100%와 세로 0으로 시작하지만 사실 auto로 둘다 들어가있음
  - 수직으로 쌓임(글자를 넣으면 위에서 아래로 순서대로 쌓임)
  - padding, margin을 상하좌우 모두 사용 가능
  - 레이아웃을 잡는 용도로 사용
  - 블럭 요소를 인라인 요소로 바꾸고 싶으면 css에 display: inline; 설정 넣어주면 됨
- 인라인 요소
  - 필요한 가로 너비만 사용
  - 크기를 지정할 수 없다.
  - (width:0; height:0;으로 시작)
  - 수평으로 쌓임(글자를 넣으면 왼쪽에서 오른쪽으로 순서대로 쌓임) - 줄바꿈 시, 띄어쓰기 한칸
  - margin 사용시 좌우는 여백이 들어가나 상하는 외부여백이 안들어감, padding은 좌우는 정확하게 적용됨, 윗쪽은 적용x, 아래쪽은 배경 색깔 표현시 적용되는 것처럼 보이지만 아래에 다른 태그를 넣어보면 정상 동작 안함을 볼 수 있음
  - 텍스트를 다루는 용도로 사용
  - 인라인 요소를 블럭 요소로 바꾸고 싶으면 css에 display: block; 설정 넣어주면 됨
- display 는 기본값이 블록요소는 block, 인라인 요소는 inline으로 설정되어있음
 ---------------------------------
4강 주요범위 & 메타데이터
- 브라우저나 검색엔진은 html의 내용을 <html> 태그 안에 있는 범위만 인식함
- html의 lang 속성에 넣을 수 있는 언어는 ISO 639-1 에 검색해보면 나온다.
- 한국어는 ko라고 작성
- head 태그에는 html 문서 제목, 기타 정보, 스타일 직접입력, 스타일 외부에서 가져와서 연결
----------------------------------
5,6,7,8,9,10강 메타데이터
- 메타 태그는 빈태그라 닫는 태그가 없음
- 메타 태그는 속성이 없으면 아무런 역할을 하지 못함
- 메타 태그에 charset 속성을 이용하여 언어 설정
- EUC-KR : 완성형, 완성된 조합이 없을 경우에는 한글이 깨지는 현상이 일어날 수 있음
- UTF-8 : 조합형
- html 요소 레퍼런스를 보려면 구글에 html 요소 레퍼런스 mdn이라고 검색하면 맨 위에 나옴( 태그별로 설명 볼 수 있음)
- meta tag
  - charset : 언어 인코딩 설정
  - http-equiv : http 통신 프로토콜의 헤더 이름 설정 (나중에 자세히)
  - name : 어플리케이션 이름 지정
  - content : http-equv나 name 속성의 값을 설정
  - name과 content를 같이 쓴다
- mdn 사이트에서 태그 옆에 쓰레기통이 그려져 있는 경우에는 html5에서 삭제되었다는 것임, !모양은 사용에 주의하라는 것
- mdn 에서 브라우저의 각 태그 지원 현황도 볼 수 있다.
- link 태그로 링크를 지정할 수 있음, link 태그에는 rel과 href 속성 필요(rel은 어떤 관계인지, href는 주소)
  - hreflang : 링크된 리소스의 언어를 선택해줌, 순수히 조언이기때문에 안써도 상관 없음
  - rel : 링크된 문서와 현재 문서와의 관계
  - href : 상대적 주소, 절대적 주소 둘다 가능, 앞에 특수문자(./나 /)가 생략되있으면 ./가 붙어있다고 생각하면 된다.
- style 태그는 css 직접 입력할때 사용
  - 예전에는 <style type="text/css">라고 선언해서 썼지만 이제는 뒤에는 생략 가능
  - body에 써도 상관은 없지만 앵간하면 head 태그 안에 작성하자
- mime 타입이란 클라이언트에게 전송된 문서의 다양성을 알려주기 위한 메커니즘임, 종류가 참 많지만 대표적인것으로(text/html, image/png 등)
  - type 속성은 가지고 오는 것에 대한 타입을 지정 ex> <style type="text/css">
- base 요소는 문서에 포함된 모든 상대 url들의 기준 url
  - base는 그 경로를 사용하기전에 먼저 설정해두자
  - base는 html 문서에서 딱 한번만 작성할 수 있음
  - 주요하게 쓰일 경로를 설정해주는 것
-------------------------------------
<05. html/요소 - 콘텐츠 구분 & 문자 콘텐츠>

1강. body 내 구조 개념
- <header> 태그는 header를 나타내는 태그
- ul은 unordered tag를 나타내고 그 안의 내용을 li 태그를 사용하여 작성
- 각각의 위치에 알맞은 태그를 사용해야함
--------------------------------------
2강. 콘텐츠 구분 - header
- header태그와 footer 태그는 후손이 될 수 없음(header 안에 header 불가)
- header 태그에는 전역 속성만 넣을 수 있다(모든 태그에 사용할 수 있는 태그)
- 인터넷 익스플로러 9버전부터 header 태그를 지원했기때문에 별다른 상관 없이 사용가능
--------------------------------------
3강. 콘텐츠 구분 - footer
- footer태그는 사이트 가장 아래에 있는 정보을 적을때 사용하는 태그로 보통 사이트의 정보, 저작권 데이터, 관련된 문서의 링크 등에 대한 정보를 나타냄
- header, footer는 div와 다르게 의미를 가지고 있는 태그로써, 기계, 브라우저 등이 태그의 의미를 읽어낼 때 사용
- 의미를 가지고 있는 태그는 적재적소에 잘 활용하는 것이 중요함
--------------------------------------
4강. 콘텐츠 구분 - H1~H6
- H1~H6는 속성 사용 X
- 가장 윗 제목부터 가장 아랫 제목까지 지정해주는 것임
- 이 H1~H6를 사용할때 글씨 크기를 줄이기 위해서 낮은 단계를 사용하면 안된다.
- H1~H6의 CSS의 FONT-SIZE 속성을 사용하여 글씨 크기를 조절하여 사용하여야함.
- 단계를 건너뛰어서 사용하지 마라(ex. h1 다음에 h3쓰고 h2를 쓰지말라), 그 이유는 기기가 목차를 검색하거나 할때 문제가 생길 수 있음
- 첫번째 단계의 제목(H1)은 한페이지에 한개만 사용해라, h1은 전체 제목이기 때문에
- nesting : 
  - h1
      h2
      h2
        h3
        h3
      h2
        h3
          h4
          h4
      h2
  이런식으로 사용하라는 것
- 5강 index_1.html
----------------------------------------
5강. 콘텐츠 구분 - main
- main 태그는 문서 내부의 핵심적인 컨텐츠를 나타낼 때 사용
- 블로그 같은 곳에서 핵심 포스트 같은 것을 넣는 곳을 main 태그로 사용한다고 보면 된다
- main 태그는 인터넷 익스플로러에서는 지원해주지 않음
- https://heropy.blog/2019/05/26/html-elements/ 에 html 요소 총 정리된 문서있음
----------------------------------------
6강. 콘텐츠 구분 - article
- article은 독립적으로 구분되거나 재사용 가능한 영역을 설정
- 블로그의 포스트나 매거진 신문기사 등을 나타낼 때 사용
- h1 ~h6를 포함하여 식별
----------------------------------------
7강. 콘텐츠 구분 - section
- 문서의 일반적인 영역을 설정
- h1 ~h6를 포함하여 식별
- section 태그 내에는 article을 넣을 수 있고, article 태그 내에도 section을 넣을 수 있음
- div와 다른점은 div는 의미가 없는 반면, section 같은 경우에는 제목을 포함해서 의미를 가지고 있다.
- article > section > div 순으로 강하게 의미를 가지고 있다고 보면 된다 (article이 가장 강한 의미를 가지고 있다.)
----------------------------------------
8강. 콘텐츠 구분 - aside
- 문서의 별도 콘텐츠를 설정할 때 사용
- 보통 광고같은 것을 나타낼 때 사용
----------------------------------------
9강. 콘텐츠 구분 - nav
- 다른 페이지 링크를 제공하는 영역
- navigation, 보통 메뉴 (home, about, contact), 목차, 색인 등을 설정해주는 태그
- 일반적으로 영역을 설정해주는 태그는 블럭요소다
- https://www.w3schools.com/tags/tag_nav.asp에 자세한 예시가 있다.
- 5강 index_2.html
----------------------------------------
10강. 콘텐츠 구분 - address
- <body>, <article>, <footer>에 연락 정보를 나타내기 위한 태그
  - <address>
      <a href="mailto:dolmac@naver.com">dolmac@naver.com</a><br>
      <a href="tel:01096802005">010-9680-2005</a>
    </address>
- a태그의 href에 mailto를 쓰면 메일 쓰는 곳으로 넘어가고 tel을 넣으면 전화하는 화면으로 넘어간다.
----------------------------------------
11강. 콘텐츠 구분 - div
- 본질적으로 아무것도 나타내지 않는 콘텐츠 영역을 설정해주는 태그
- 보통 css를 삽입하거나 javascript를 통해서 제어할 때 보통 많이 사용
- 꾸미는 목적으로 사용한다라고 보면 된다.
----------------------------------------
12강. 콘텐츠 구분 - 예제
- 세로로 나오는것을 가로로 나타내고 싶을 경우에는 css에 display:flex하면됨
- 5강 index_3.html main_3.css 참고
----------------------------------------
13강. 문자 콘텐츠 - ol, ul, li
- li : 각 항목
- ol : 정렬된 목록(항목에 순서가 있을 때)
- ul : 정렬되지 않은 목록(항목에 순서가 필요 없을 때)
- ol 과 li, ul과 li 가 한세트로 사용됨
- li 태그는 단독적으로 사용될 수 없음
- ol 태그는 순서의 중요도를 의미할 수 있음
- ol과 li는 block 요소, li는 기본적으로 display:list-item로 블럭요소에 소속되어있다고 보면되는 것임
- ul 태그는 순서가 없으므로 점으로 표시, ol 태그는 순서가 있으므로 숫자를 지원
- 속성에 reversed, start, type 을 넣을 수 있는데 reversed는 내림차순, start는 시작번호 지정, type은 번호의 유형(a, A ,i, I, 1)
- boolean 형식의 속성은 속성값만 입력해도 적용됨 ex> reversed="reversed" 대신 reversed만 입력해도 됨
- li 태그 내에는 value 속성을 입력할 수 있으며 이것은 항목의 순서를 지정할 때 사용, value를 지정하지 않을 경우에는 가장 마지막에 쓴 value값 다음으로 순차적으로
- 5강 index_4.html 참고
- ol 태그보다는 ul 태그가 일반적으로 더 많이 사용됨
-----------------------------------------
14강. 문자 콘텐츠 - dl, dt, dd
- 용어<dt> 정의<dd> 쌍들의 영역<dl>을 설정해서 사용
- 용어 - 설명, 용어 - 설명, 용어 - 설명 이런식으로 사용
- key - value 를 나타낼 때 유용하게 사용
- 기본적으로 블럭요소임
- 보통 ul, li로 대체해서 사용, 스타일링하기가 힘들기 때문에(dl 안에 div를 넣을 수 없어서)
- 5강 index_5.html 참고
------------------------------------------
15강. 문자콘텐츠 - p, hr
- <p> 태그는 하나의 문단을 설정하는데 사용
- p태그도 블록 요소임
- 정보통신보조기기 등은 다음 문단으로 넘어갈 수 있는 단축키를 p태그를 기준으로 제공함
- p 태그 내에서 엔터를 쳐도 소용 없음 <br>태그를 사용하여 줄바꿈 수행
- <hr />은 빈태그로 문단의 분리를 위해 설정
- hr 태그는 수평선으로 문단의 문리의 의미적 관점으로만 사용해야지 수평선 표시를 위해 사용하지 말아야한다.
- hr 태그도 블록요소임
- 5강 index_6.html, main_6.css
------------------------------------------
16강 문자콘텐츠 - pre
- <pre>는 서식이 미리 지정된 텍스트를 설정한다. - 엔터 갯수, 탭키 갯수, 띄어쓰기 갯수를 그대로 다 출력한다.
- 텍스트의 공백과 줄바꿈을 유지하여 표시할 수 있음
- 기본적으로 monospace 글꼴 계열로 표시됨.
  - 모든 글자의 너비가 x로 동일한 것을 monospace라고 함
- 예를들어 띄어쓰기, 줄바꿈의 경우 여러개를 넣어도 한개만 출력되는데 pre 안에 넣으면 여러개 넣은 만큼 출력됨
- 5강 index_7.html
------------------------------------------
17강. 문자콘텐츠 blockquote
- 일반적인 인용문을 설정할 때 사용
- cite라는 속성을 사용할 수 있음 - 인용된 정보의 url을 지정할 때 사용
------------------------------------------
<06. html/요소 - 인라인 텍스트 & 수정>

1,2 강. 인라인 텍스트 A
- a 태그는 현재 문서에서 외부문서로 나갈 때, 링크를 걸어주는 태그
- anchor의 약자로 외부로 내보내기라고 할 수 있다.
- 많은 속성이 있지만 href, rel, target 정도가 자주 사용
  - download : 이 요소가 리소스를 다운로드하는 용도로 사용
  - href : 링크 url을 담을 때 사용(거의 필수라고 볼 수 있는 속성)
  - hreflang : 특정한 경로로 나갈때 그 나가는 페이지 링크의 언어를 설정해줌
  - rel : 현재 문서와 링크url의 관계를 나타냄(license, prev, next 등의 값을 넣어줌)
  - target : 링크 url의 표시 위치 (_self : 현재창에 띄움, _blank : 새창에 띄움, 기본값은 _self)
  - type : 링크 url의 mime 타입
- a 태그는 inline 요소임
- 같은 페이지 내의 id의 위치로 이동하려면 #id 로 a태그에 넣어주면 됨
- 주소에도 html명 뒤에 #id를 통해서 특정 위치에서 열리도록 할 수 있음(ex. www.naver.com#id)
- 6강 index_1.html, main_1.css
------------------------------------------
3강. 인라인 텍스트 ABBR
- 약어를 지정할 때 사용
- 약어에 대한 설명을 추가할 때 title속성을 이용하여 사용한다고 보면 됨
- 인라인 방식임
- 6강 index_2.html
------------------------------------------
4강,5강. 인라인 텍스트 B, MARK, EM, STRING, I
- b태그는 문체가 다른 글자의 범위를 설정
  - b태그는 기본적으로 글자가 두껍게 표시됨
  - 특별한 의미를 가지지 않고, 읽기 흐름에 도움을 주는 용도로 사용, 다른 태그가 적합하지 않은 경우 마지막 수단으로 사용
- mark 태그는 사용자의 관심을 끌기 위해서 하이라이팅할 때 사용
  - mark는 의미보단 시각적으로 더 많이 사용
- em 태그는 의미를 강조할 때 사용
  - em태그는 중첩해서 사용할 수 있으며 중첩할수록 강조 의미가 강해짐
  - 정보통신보조기기 등에서 구두 강조로 발음됨
  - 이탤릭체로 표시됨
- strong 태그는 의미의 중요성을 나타내기 위해 사용
  - 기본적으로 글자가 두껍게 나타남
- b태그와 strong 태그가 혼용 될 수 있어서 css를 통해서 혼용되지 않도록 해주는게 좋다
- i 태그는 em, strong, mark, cite, dfn 등에서 표현할 수 있는 적합한 의미가 아닌 경우 사용
  - b태그와 i태그 비슷할 수 있지만 b 태그는 일반적인 텍스트를, i 태그는 아이콘이나 특수기호 같은 경우에 사용
  - 기본적으로 i태그는 이텔릭체로 표시
  - i 태그에 사용할 아이콘을 찾으려면 구글에 i tag icon tutorial 검색
- 보통 외부의 파일을 link로 불러올때는 css위에 둔다
- 6강 index_3.html, main_3.css
-------------------------------------------
6강. 인라인 텍스트 dfn
- dfn은 용어를 정의할 때 사용
- dl, dt, dd태그로 용어를 정의한다고 배웠었음 - 용어의 설명을 나영할 때 사용하는 것으로 용어가 많은 때에 사용
- 하나의 용어를 정의 할 때 사용
- 인라인 방식이다
- <dfn id="def-internet">The internet</dfn>으로 사용한다.
- 용어에 대한 정의는 딱 지정되어있지는 않음
--------------------------------------------
7강. 인라인 텍스트 - CITE
- 창작물에 대한 참조를 설정(책, 논문, 영화, 게임 등의 제목)
- 인라인방식
--------------------------------------------
8강. 인라인 텍스트 - q
- 짧은 인용문을 설정할 때 사용
- 긴 인용문은 <blockquote>를 사용하고 짧을때만 사용
- cite라는 속성을 사용하여 인용된 정보의 url 설정 가능
- 인라인 요소임
---------------------------------------------
9강. 인라인 텍스트 - u
- 밑줄이 있는 글자를 설정
- 순수하게 꾸미는 용도로 사용
- css를 활용할 수 있는 환경이라면 u태그보다는 css를 활용하는 것이 더 나음
- 6강 index_4.html, main_4.css (u태그를 대체해서 쓰는법)
---------------------------------------------
10강. 인라인 텍스트 - code
- 컴퓨터 코드 범위를 설정
- 코드를 화면에 보여줄 때 사용함
- 6강 index_5.html, main_5.css (code 태그 사용 예제)
---------------------------------------------
11강. 인라인 텍스트 - kbd
- kbd는 키보드의 약어로 키보드에서 사용자 입력을 나타내는 텍스트 범위를 지정할 때 사용
- 6강 index_6.html, main_6.css kbd 사용 예제
---------------------------------------------
12강. 인라인 텍스트 - sup, sub
- sup는 superscripted text, sub는 subscript text
- 윗첨자 아랫첨자라고 보면 됨
- 함수나 화학식 나타낼 때 사용
- index_7.html 
---------------------------------------------
13강. 인라인 텍스트 - time
- 날짜나 시간을 나타내기 위한 목적으로 사용
- 유효한 날짜를 datetime 이라는 속성을 이용하여 나타내줌
- 인터넷 익스플로러에서는 타임 태그를 지원하지 않는다.
---------------------------------------------
14강. 인라인 텍스트 - span
- div 태그와 비슷하게 본질적으로 아무런 의미도 나타내지 않는 태그
- div는 블록 요소이지만 span 태그는 인라인 요소임
- 텍스트의 일부분을 span 태그로 묶어서 css를 적용시킴
- index_8.html, main_8.css span 태그를 활용하여 css 적용하는 예시
---------------------------------------------
15강. 인라인 텍스트 - br
- br 태그는 줄바꿈을 설정할 때 사용
- br은 빈태그라 닫는 태그 없음
- br 태그를 여러번 입력해서 간격을 만들어내지말고 css를 활용하여 간격을 벌려라
- 6강 index_9.html, main_9.css br 태그의 간격 늘리는 예시
---------------------------------------------
16강. 인라인 텍스트 - del,ins
- del은 삭제된 텍스트의 범위를 지정
 - 제거된 이유는 cite로 제거된 날짜는 datetime 속성을 이용하여 표시
 - 중앙선이 그어짐
- ins는 새로 추가된 텍스트의 범위를 지정
 - del과 마찬가지로 cite와 datetime 속성 사용 가능
 - 밑줄이 그어짐
---------------------------------------------
<07. html/요소 - 멀티미디어 & 내장 콘텐츠 & 스크립트>

1,2,3,4강 - 멀티미디어 img
- img 태그는 이미지를 삽입하기 위한 태그
- src 는 이미지의 url으로 필수 속성임, alt도 필수 속성으로 이미지의 대체 텍스트를 삽입
- 이미지 크기를 조절할때에는 width나 height중에 하나만 쓰면 알아서 두개의 비율에 맞게 조절됨(css에서도 조절할 수 있음)
- srcset은 브라우저에게 제시할 이미지 url + 원본 크기의 목록을 지정
- sizes는 미디어 조건과 해당 조건일 때 이미지 최적화 크기의 목록 정의 (이 두가지는 반응형 웹 만들때 주로 사용)
- srcset과 sizes 사용 문서 - https://heropy.blog/2019/06/16/html-img-srcset-and-sizes/
- srcset에는 경로 크기, 경로 크기 ..... 하면 출력될 이미지들의 목록으로 알아서 가져다가 사용
- sizes는 최적화된 조건을 명시하는 영역이라고 보면됨
- srcset을 사용할때에는 2장 이상의 사진이 크기별로 필요하며 px단위가 아닌 w나 x단위로 넣으며 작은거부터 큰거 순으로 넣음
- w단위는 가로 너비를 입력해서 크기 지정하는 것으로 400x300이면 400w라고 쓰면됨
- srcset w단위 예제는 7강의 index_1.html
- x단위는 그림의 배수단위로 지정해준다고 생각하면 된다.
- srcset x단위 예제는 7강의 index_2.html
- sizes는 sizes="(min-width: 1000px) 700px"으로 사용하며 창의 최소 너비가 1000px 이상일때에는 700px로 최적화 출력하겠다 라는 의미를 갖는다(7강 index_3.html)
- srcset에 sizes속성이 아닌 width속성을 아용하면 그림의 크기는 자동으로 조절되지않으며 고정된 크기로 이미지만 바뀐다.
- sizes에 사이즈px만 지정하면 최적화될 크기의 사진을 선택하고 그것을 조절해서 사용(지정된 값보다 더 큰 값의 사진으로)
- sizes와 width를 같이 쓰면 width가 우선순위
- sizes는 인터넷 익스플로러에서 지원하지 않는다.
---------------------------------------------
5강 - 멀티미디어 audio
- audio는 소리 컨텐츠를 삽입할 때 사용
- autoplay옵션은 사이트가 켜지면 바로 재생
- controls는 제어 메뉴를 표시
- loop는 재생이 끝나면 다시 처음부터 재생
- preload는 페이지가 로드될 때 파일을 로드할지의 지정으로 옵션은 none, metadata, auto가 있으며 보통 metadata를 사용하며 미리 metadata를 받아오겠다라는 것
- src는 콘텐츠 경로
- muted는 음소거 여부
- 오디오 중간부터 재생하려면 자바스크립트를 통해서 해야한다
- 7강 index_4.html
--------------------------------------------
6강 - 멀티미디어 video
- video는 동영상 컨텐츠를 삽입할 때 사용
- autoplay는 비디오 파일이 준비가 되면 바로 재생
- controls는 제어 메뉴
- crossorigin은 가져오기가 cors를 사용하여 수행되어야하는지 여부를 나타내며 cors는 동일출처정책이다.
- loop는 반복할것인가
- muted 는 음소거 여부
- poster는 동영상 썸네일 이미지의 url을 나타냄
- preload는 페이지가 로드될 때 파일을 로드할지 지정
- src는 컨텐츠의 경로
- width는 동영상 가로너비, height는 동영상 세로 너비
- 7강 index_5.html
--------------------------------------------
7강 - 멀티미디어 figure, figcaption
- figure 태그는 이미지나 삽화, 도표 등의 영역을 설정
- figcaption은 figure 에 포함된 이미지나 삽화 등의 설명을 나타냄
- 보통 사람들보다는 브라우저나 정보통신 보조기기등이 확인할 때 사용
- 7강 index_6.html
-------------------------------------------
8강 - 내장콘텐츠 iframe
- iframe은 다른 html 페이지를 현재 페이지에 삽입할 때 사용, 중첩된 브라우저 컨텍스트를 표시
- 보통 동영상같은걸 가져와서 내 화면에 보여줄 때 사용
- 현재 페이지에 다른 페이지를 보여줄 때 사용한다라고 생각하면된다.
- allowfullscreen은 전체화면을 사용가능하게 할지
- frameborder 는 프레임 테두리 사용 여부
- 유튜브에서 동영상 우클릭 후 소스코드로 가져오기 하면 iframe 통째로 가져와진다.
- sandbox 속성은 보안을 위한 읽기 전용으로 삽입, 옵션에 allow-scripts는 스크립트 실행가능, allow-form은 양식 제출가능 등의 설정을 할 수 있다.
- 7강 index_7.html
-------------------------------------------
9강 - 내장콘텐츠 canvas
- canvas api나 webgl api를 사용하여 그래픽이나 애니메이션을 랜더링하는 범위를 나타내는 태그
- 속성은 width와 height가 있다
- 캔버스 안에 그림은 javascript로 그린다.
- index_8.html
------------------------------------------
10강,11강 - 스크립트 script
- 스크립트 코드를 문서에 포함하거나 참조할 때 사용
- async 속성은 스크립트의 비동기적 실행 여부를 나타낼 때 사용(동기 : 순차적으로 코드가 실행, 비동기 : 필요에 의해서 건너뛰거나 함), async 는 src 속성이 무조건 필요함(외부 스크립트를 동기방식으로 사용할지 하는거니까)
- defer 속성은 html문서 전체를 다 확인한 후에 script를 실행하라는 것, script 태그를 가장 밑에다가 넣어서 사용하기도 함
- 7강 index_9.html, main_9.js
- src 속성은 참조할 외부 스크립트의 경로를 나타냄, src 속성을 사용하면 script 안에 작성한 내용은 무시한다.
- type을 이용해서 받아올 스크립트의 Mime 타입을 가져오는데 기본값은 text/javascript이기 때문에 생략가능
------------------------------------------
12강 - 스크립트 noscript
- noscript는 스크립트가 지원하지 않는 경우에 삽입할 html을 정의
- javascript가 돌아갈 수 없는 경우에는 이러한 내용을 출력해주세요 라고 보면 된다.
- 7강 noscript.html, index_10.html
------------------------------------------
<08. html/요소 - 표 콘텐츠 & 양식>
1강 표콘텐츠 - table
- 데이터 표 table 태그 내에 행은 tr 열은 td로 하는데 제목의 역할을 할 때에는 th 태그 사용
- display:table인데 기본적으로 block요소와 비슷하게 동작한다고 생각하면 된다.
- tr은 display:table-row; th,td는 display:table-cell;이다.
------------------------------------------
2강 표 콘텐츠 - th
- 머리글 칸을 지정할 때 사용
- abbr은 열에 대한 간단한 설명을 나타냄
- headers는 관련된 하나 이상의 다른 머리글 칸 id 속성 값
- colspan은 열의 몇칸까지 합칠지 나타냄
- rowspan은 행의 몇칸까지 합칠지 나타냄
- scope는 누구의 머리글 칸인지 명시하며 기본값은 auto로 자동으로 알아서 설정해준다(중요한 속성은 아님)
- 8강 index_1.html main_1.css
-------------------------------------------
3강. 표 콘텐츠 - td
- 일반 칸을 지정할 때 사용
- th와 마찬가지로 header, colspan, rowspan 사용 가능. 단, 헤더는 th의 id 값을 연결하는거지 td끼리 연결하는건 아니다.
-------------------------------------------
4강. 표 콘텐츠 - caption
- caption은 표의 제목을 설정해줌
- 열리는 table태그 바로 뒤에 사용해야하며 caption은 하나만 사용 가능
-------------------------------------------
5강 표 콘텐츠 - colgroup, col
- 표의 열들을 공통적으로 정의하는 컬럼(col)과 그의 집합 (colgroup)으로 나타내짐
- span 속성이 사용 가능하며 연속되는 열수
- 데이터 처음 정의하기 바로 전에 컬럼수만큼 col 태그를 작성해놓고 원하는 위치에 css를 넣어주면 됨
- 8강 index_2.html
-------------------------------------------
6강 표 콘텐츠 - thead, tbody, tfoot
- 표의 머리글, 본문, 바닥글을 지정해주며 레이아웃에는 영향을 주진 않음
- 표를 구성할 때에 태그만 만들어주면 된다.
- 8강 index_3.html
-------------------------------------------
7강. 양식 - form
- form 태그는 웹서버에 정보를 제출하기 위한 양식 범위를 정의
- 보통 로그인 페이지 같은 곳에 사용
- form에는 다른 form을 넣을 수 없다.
- action 속성은 전송한 정보를 처리할 페이지의 url
- autocomplete는 사용자가 이전에 입력한 값으로 자동 완성할 것인지. on, off로 설정
- method는 get이냐 post냐를 지정(get 은 보낼 정보를 url에 넣어서 보내고 post는 숨겨서 보냄)
- name 은 양식의 이름
- novalidate 는 유효성 검사를 하지 않도록 지정 - 양식에 맞지 않아도 넘어간다(이메일에 골뱅이 같은 것), 보통은 잘 쓰지 않음
- target은 서버로 전송 후 응답받을 방식을 지정하는 것으로 _self면 현재 탭에, _blank는 새창에
- form 태그는 블럭요소임
- 8강 index_4.html
-------------------------------------------
8,9강. 양식 input
- input은 입력을 받을 데이터 양식
- autocomplete속성은 자동 완성을 사용할지
- autofocus는 페이지가 로드될 때 자동 포커스, 화면에 고유하게 하나만 있어야함
- checked 양식이 선택되었음을 표시하며 type이 radio, checkbox 만 사용가능
- name은 양식의 이름
- type은 입력받을 데이터의 종류 ex)text, tel, button, checkbox 등등
- form 태그는 연결할 form태그의 id 값을 넣어주며 그 form으로 데이터 전송
- 8강 index_5.html
-------------------------------------------
10강 양식 - label
- 라벨 기능 요소의 제목
- input 요소의 레이블을 달아준다고 생각하면 됨
- 8강 index_6.html
-------------------------------------------
11강. 양식 - button
- 선택 가능한 버튼을 생성
- input 을 사용하여 대체 가능
- autofocus, disabled, form, name, type 속성을 사용 가능
- 8강 index_7.html
-------------------------------------------
12강. 양식 - textarea
- 여러줄의 일반 텍스트를 작성할 때 사용
- text와 속성은 같으며 rows라는 속성이 있는데 이건 표시할 줄 수를 나타냄
- 모서리를 클릭해서 크기 조절 가능
- placeholder가 힌트를 나타내줌
-------------------------------------------
13강. 양식 - fieldset, legend
- 같은 목적의 양식을 그룹화(fieldset) 제목(legend) 지정
- disabled는 그룹 내 모든 양식 요소를 비활성화
- form 그룹이 속할 하나 이상의 form의 Id
- name은 그룹 이름
-------------------------------------------
14강. 양식 - select, datalist, optgroup, option
- option, optgroup는 옵션을, 선택메뉴(select), 자동완성(datalist)를 통해서 사용
- size를 통해서 선택할 수 있는 목록을 한번에 볼 갯수, multiple 을 쓰면 여러개 한번에 선택 가능
- optgroup를 통해서 선택할 수 있는 목록들을 그룹지을 때 사용
- disabled : 비활성화, label : 옵션의 제목, selected : 선택, value : 양식으로 제출될 값
- datalist는 input에 list속성으로 넣어서 자동 완성으로 할 수 있는 목록을 지정
- 8강 index_8.html
-------------------------------------------
15강 양식 - progress
- progress는 작업의 완료 진행률을 표시할 때 사용
- max는 작업의 총량
- value는 현재량
- 8강 index_9.html
-------------------------------------------
<09. html/전역속성,기타>

1강. 전역 속성 - id와 class
- 전역 속성은 모든 html 요소에서 공통으로 사용할 수 있는 속성
- class는 css나 js에서 요소에 접근하거나 선택하기 위해 지정해놓는 요소 선택기, 한 페이지에 동일한 class를 여러개가 가질 수 있음
- id는 문서에서 고유한 식별자를 정의, id는 하나만 가져야함
- css에서 class는 앞에 .을 붙이고 id는 #을 붙임
-------------------------------------------
2강. 전역 속성 - style
- style속성은 css를 요소에 직접 입력할 때 사용
-------------------------------------------
3강. 전역 속성 - title
- 요소의 정보나 설명을 지정할 때 사용
- 마우스 포인터를 가져다대었을 때 나타나는 것을 지정할 때 사용
-------------------------------------------
4강. 전역 속성 - lang
- 요소의 언어를 지정할 때 사용
- 일반적으로 사용되는 사이트는 언어 설정되는게 하나이기때문에 html 태그에 lang 속성을넣어줌
-------------------------------------------
5강. 전역 속성 - data-
- 사용자 정의 데이터 속성을 지정
- html에서 보관하고 있다가 js에서 사용
- 9강 index_2.html

------------------------------------------- 
6강. 전역 속성 - draggable
- 요소가 draggabledrag and drop api를 사용 가능한지 여부를 지정
-------------------------------------------
7강. 전역 속성 - hidden
- hidden은 요소를 숨길 때 사용
- hidden 태그가 적용 된 곳은 웹 페이지에 보여지지 않음
-------------------------------------------
8강. 전역 속성 - tabindex
- tab키를 이용해 요소를 순차적으로 포커스 탐색할 때 사용, 1,2,3,4....으로 tab눌렀을 때 다음칸으로 넘어감
- 1,2,3....순으로 돌고 0이나 지정 안되어있는 곳으로 이동함
- -1을 넣어서 탭에서 제외할 수 있다
- 대화형 콘텐츠에만 감, 비대화형 콘텐츠의 경우에는 tabindex를 지정해주면 tab눌러서 그곳으로도 갈 수 있음
- 9강 index_3.html
-------------------------------------------
9강. 절대 경로와 상대 경로
- 상대경로는 주변에서 찾는 것으로 현재 위치를 ./로 기준으로 해서 주변에서 찾음
- 절대 경로는 url이나 root경로부터의 경로를 지정해주며 /로 기준으로 해서 경로 지정
-------------------------------------------
10강. 주석
- 메모처리할 영역을 드래그해서 command+/누르면 주석 처리됨
- 화면에 노출하지 않고 설명을 써놓는것
-------------------------------------------
11강. 특수 기호
- 띄어쓰기를 아무리 여러개를 써도 한개로 나오는데 갯수만큼 입력하려면 &nbsp;쓰면됨
- <는 lt; >는 gt;
-------------------------------------------

HTML 끝









