<26. 1장| 벨로퍼트와 함께 하는 모던 자바스크립트 : JavaScript 입문>

00. JavaScript는 뭔가요
- 브라우저에서 사용하려고 만들어진 언어
- 웹 브라우저를 동적으로 사용하기 위해서 만듬
- 현재는 nodejs, react 등 다양한 것들이 파생되어 나옴
----------------------------------------------------------------------------
01. Hello-JavaScript
- 자바스크립트는 브라우저에서 언제든지 실행할 수 있음(ex. 크롬의 개발자도구에서 실행)
- 또는 웹에 codesandbox.io 에 들어가서도 실행해볼 수 있음
- 바닐라js가 일반 자바스크립트만 쓰겠다라고 보면 됨(어떤 라이브러리도 쓰지 않겠다.)
----------------------------------------------------------------------------
02. 변수
- 특정 이름에 특정 값을 넣는 것을 선언이라고 함
- 변수는 let으로 선언, 한번 선언한 변수를 또 같은 이름으로 선언할 수 없음
- 상수는 const라는 키워드를 사용하며 한번 값을 설정하면 바꾸지 못함
- 옛날에는 변수를 선언할 때 let이 아닌 var를 사용했지만 지금은 권장하지 않음
- var은 똑같은 이름으로 또 선언할 수 있음(하지만 사용하지 않음)
- 구형 브라우저에서는 let과 const를 쓸 수 없음
- null은 없다 undifined는 아직 정해지지 않았다.
----------------------------------------------------------------------------
03. 연산자 - 산술연산자, 대입연산자
- 연산자는 특정 연산을 할 때 사용하는 문자
- 산술 연산자는 사칙 연산등의 연산을 할 때 사용하는 연산자
- 대입 연산자는 특정 변수에 대입할 때 사용하는 연산자
----------------------------------------------------------------------------
04. 연산자 - 논리연산자
- 논리연산자는 boolean 값을 처리하기 위한 연산자
- !, &&, ||가 있음
- !, &&, || 순으로 계산
----------------------------------------------------------------------------
05. 연산자 - 비교연산자, 문자열 붙이기
- 자바 스크립트에서는 같은지 비교할 때에는 ===으로 비교(==으로 비교하면 값만 같은지 비교하는 것이고 ===은 값과 타입까지 같은지 비교하는 것)
- 문자열을 붙일때에는 문자열 + 문자열로 합쳐줌
----------------------------------------------------------------------------
06. 조건문 - if, else, else if
- 조건을 줄 때 사용
- 보통의 언어들이랑 사용방법 같음
----------------------------------------------------------------------------
07. 조건문 - switch case
- switch값이 case인 경우들을 찾음
----------------------------------------------------------------------------
08. 함수
- 파라미터가 주어졌을 때 처리해서 결과를 만들어냄
- function 키워드를 사용하여 선언
----------------------------------------------------------------------------
09. 함수 - Template Literal
- es6에서는 문자열 더하는 방법에 Template Literal이라고 쉽게 할 수 있는 방법이 생김
- ex `Hello ${name}!` 이런식임
----------------------------------------------------------------------------
10. 함수 - 연습
- grade를 구하는 함수 만드는 연습
fuction grade(score){
    if(score === 100){
        return A+;
    }
    else if(score >= 90){
        return A;
    }
    else if(score >=80){
        return B+;
    }
    else if(score >= 70){
        return B;
    }
    else{
        return C;
    }
}
----------------------------------------------------------------------------
11. 함수 - 화살표 함수
- const add = (a,b) =>{return a+b;} 와 같은 식으로 사용
- () => {} 가 기본 형태
- 이것도 ex6에서 추가되었음.
----------------------------------------------------------------------------
